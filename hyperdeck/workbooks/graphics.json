{"metadata":{"version":1,"view":"all"},"components":[{"type":"graphics","name":"graphics1","visible":true,"text":"var scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera(75, ctx.domElement.width/ctx.domElement.height, 0.1, 1000);\n\n//var renderer = new THREE.CanvasRenderer({context:ctx}); // we modified CanvasRenderer.js to allow passing in a context\n//var renderer = new THREE.CanvasRenderer({canvas:canvas});\n\n//var texture = THREE.ImageUtils.loadTexture('wall01.jpg');\n//var textureCanvas = document.createElement('canvas');\n//textureCanvas.width = 256;\n//textureCanvas.height = 256;\n//var ctx = textureCanvas.getContext('2d');\n//ctx.fillStyle = 'rgb(255,255,255)';\n//ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n//ctx.fillStyle = 'rgb(255,0,0)';\n//ctx.fillRect(0, 0, 100, 100);\n//var canvasTexture = new THREE.CanvasTexture(textureCanvas);\n\nvar geometry = new THREE.BoxGeometry(1, 1, 1);\n//var geometry = new THREE.PlaneGeometry(3, 2);\n//var geometry = new THREE.SphereGeometry(3, 20, 20);\n//var geometry = new THREE.TorusGeometry(3, 1, 20, 20);\n//var material = new THREE.MeshBasicMaterial({color:0x009900});\nvar material = new THREE.MeshBasicMaterial({color:0x000000,wireframe:true});\n//var material = new THREE.MeshLambertMaterial({map:textureDict['wall01.jpg']});\n//var material = new THREE.MeshLambertMaterial({map:canvasTexture});\nvar mesh = new THREE.Mesh(geometry, material);\nscene.add(mesh);\n//var cutout = MakeCutout(5, 10, '110.png', '110t.png');\n//scene.add(cutout);\n// http://threejs.org/docs/#Reference/Lights/PointLight\n// PointLight(hex, intensity, distance, decay=1) - distance = decay radius, decay = amount decayed at end\nvar light = new THREE.PointLight(0xffffff, 1, 100);\nlight.position.set(3, 3, 5);\nscene.add(light);\ncamera.position.set(2, 2, 5);\ncamera.lookAt(mesh);\n\nfunction Render() { light.position = camera.position; ctx.render(scene, camera); }\nRender();\n\n// unfortunately, placing the orbit controls disables right click, and thus save as png\nvar controls = new THREE.OrbitControls(camera, ctx.domElement);\ncontrols.addEventListener('change', Render);\ncontrols.enableDamping = true;\ncontrols.dampingFactor = 0.25;\ncontrols.enableZoom = true;","params":{"width":500,"height":300}}]}