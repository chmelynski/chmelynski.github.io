{"metadata":{"version":1,"view":"all"},"components":[{"type":"diagram","name":"diagram1","visible":true,"text":"\n// Click and drag the green points in the diagram\n// After the drag, the object literals below will update with the new coordinates.\n// You can also draw a selection box and then drag the selection box.\n// A draggable point will be drawn for each object literal of the form { x: <int>, y: <int> }.\nconst p = { x: 336, y: 131 };\nconst q = { x: 63, y: 204 };\n\nctx.beginPath();\nctx.moveTo(p.x, p.y);\nctx.lineTo(q.x, q.y);\nctx.stroke();\n","showPoints":true,"width":500,"height":300},{"type":"map","name":"map1","visible":true,"text":"\n// Click+Drag       - pan\n// Wheel            - zoom\n// Ctrl+Click+Drag  - rotate map around center\n// Shift+Click      - handled by this.onshiftclick = function(x, y, lng, lat)\n// the projection is the equirectangular with standard parallel determined by the map center\n// TODO: add support for other projections\nctx.strokeStyle = 'black'; // ctx is a CanvasRenderingContext2D\n// this.geojson/topojson(geojson/topojson) => GeoAsset\n// this.stroke(GeoAsset) -> strokes lines\nthis.stroke(this.topojson(Hyperdeck.Components.map.defaultGeojson));\n","params":{"width":600,"height":400,"lat":40,"lng":-100,"metersPerPixel":6309.57344480193,"rotation":0}},{"type":"graphics","name":"graphics1","visible":true,"text":"\n// Click+Drag       - pan\n// Wheel            - zoom\n\nconst scene = new Graphics.Scene({ ctx });\nscene.root.addChild(Graphics.Geometry.Cube(1, 1, 1));\nscene.camera.setPosition(4, 3, -5);\nscene.render();\n","params":{"width":500,"height":300}}]}