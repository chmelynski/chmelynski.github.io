{"metadata":{"version":1,"view":"all"},"components":[{"type":"md","name":"source","visible":false,"text":"This example is from [http://worrydream.com/ClimateChange/#media-debate](http://worrydream.com/ClimateChange/#media-debate):","display":"codemirror","mode":"default","runOnBlur":true,"runOnLoad":true},{"type":"js","name":"calculations","visible":false,"text":"\nvar inputs = Hyperdeck.Get('inputs');\nvar outputs = Hyperdeck.Get('outputs');\n\noutputs.carsTraded = (inputs.budget - inputs.overhead) / inputs.rebate * 1000000000;\n\noutputs.gallonsConsumedPerHour = inputs.gallonsConsumedPerDay / 24;\n\noutputs.hoursOfGas = inputs.gallonsSaved / outputs.gallonsConsumedPerHour;\n\noutputs.tonsCo2Saved = inputs.gallonsSaved * inputs.kgCo2PerGallonGas / 1000;\n\noutputs.tonsCo2eSaved = outputs.tonsCo2Saved / inputs.co2PerCo2e;\n\noutputs.percentAnnualEmissions = outputs.tonsCo2eSaved / inputs.tonsCo2eEmittedYearly * 100;\n\noutputs.dollarsPerTonCo2e = inputs.budget / outputs.tonsCo2eSaved * 1000;\n\noutputs.dollarsSavedBuyingLessGas = inputs.gallonsSaved * inputs.dollarsPerGallon / 1000;\n\noutputs.dollarsSpentOnBalance = inputs.budget - outputs.dollarsSavedBuyingLessGas;\n\noutputs.onBalanceDollarsPerTonCo2e = outputs.dollarsSpentOnBalance / outputs.tonsCo2eSaved * 1000;\n\nHyperdeck.Set('outputs', outputs);\nHyperdeck.Run('generate');\n","display":"codemirror","mode":"default","runOnBlur":false,"runOnLoad":false},{"type":"data","name":"inputs","visible":false,"data":{"budget":3,"rebate":3500,"overhead":0.1,"oldMpgLimit":17,"newMpgLimit":24,"gallonsSaved":1068,"gallonsConsumedPerDay":376,"kgCo2PerGallonGas":8.87,"co2PerCo2e":0.95,"tonsCo2eEmittedYearly":6983,"dollarsPerGallon":3},"params":{"format":"json","display":"yaml","form":"object","headers":["budget","rebate","overhead","oldMpgLimit","newMpgLimit","gallonsSaved","gallonsConsumedPerDay","kgCo2PerGallonGas","co2PerCo2e","tonsCo2eEmittedYearly","dollarsPerGallon"],"afterChange":""}},{"type":"data","name":"outputs","visible":false,"data":{"carsTraded":828571.4285714285,"gallonsConsumedPerHour":15.666666666666666,"tonsCo2Saved":9.47316,"tonsCo2eSaved":9.971747368421052,"hoursOfGas":68.17021276595744,"percentAnnualEmissions":0.14280033464730135,"dollarsPerTonCo2e":300.8499803655803,"dollarsSavedBuyingLessGas":3.204,"dollarsSpentOnBalance":-0.204,"onBalanceDollarsPerTonCo2e":-20.457798664859457},"params":{"format":"json","display":"yaml","form":"object","headers":["carsTraded","gallonsConsumedPerHour","tonsCo2Saved","tonsCo2eSaved","hoursOfGas","percentAnnualEmissions","dollarsPerTonCo2e","dollarsSavedBuyingLessGas","dollarsSpentOnBalance","onBalanceDollarsPerTonCo2e"],"afterChange":""}},{"type":"txt","name":"template","visible":false,"text":"Say we allocate {{budget,$%.1f billion}} for the following program: Car-owners who trade in an old car that gets less than {{oldMpgLimit,%d MPG}}, and purchase a new car that gets better than {{newMpgLimit,%d MPG}}, will receive a {{rebate,$%d}} rebate.\n\nWe estimate that this will get {{carsTraded,%d}} old cars off the road. It will save {{gallonsSaved,%d million gallons}} of gas (or {{hoursOfGas,%d hours}} worth of U.S. gas consumption.) It will avoid {{tonsCo2eSaved,%.2f million tons}} CO2e, or {{percentAnnualEmissions,%.2f%%}} of annual U.S. greenhouse gas emissions.\n\nThe abatement cost is {{dollarsPerTonCo2e,$%d}} per ton CO2e of federal spending, although itâ€™s {{onBalanceDollarsPerTonCo2e,$%d}} per ton CO2e on balance if you account for the money saved by consumers buying less gas.\n","display":"codemirror","mode":"default","runOnBlur":false,"runOnLoad":false},{"type":"js","name":"generate","visible":false,"text":"\nvar text = Hyperdeck.Get('template');\nvar inputs = Hyperdeck.Get('inputs');\nvar outputs = Hyperdeck.Get('outputs');\n\nvar vars = {};\nfor (var key in inputs) { vars[key] = inputs[key]; }\nfor (var key in outputs) { vars[key] = outputs[key]; }\n\nfor (var key in vars)\n{\n  var start = text.search('{{');\n\t\n  while (start >= 0)\n  {\n\t\tvar end = text.search('}}');\n\t\tvar tag = text.substring(start+2, end);\n\t\tvar parts = tag.split(',');\n\t\tvar key = parts[0];\n\t\tvar format = parts[1];\n\t\tvar formatted = (vars[key] ? sprintf(format, vars[key]) : '??');\n\t\tvar spanclass = (inputs[key] ? 'adjustable-number' : 'calculated-result'); // output is default\n\t\tvar span = '<span class=\"'+spanclass+'\">'+formatted+'</span>';\n  \ttext = text.replace('{{'+tag+'}}', span);\n\t\tstart = text.search('{{');\n  }\n}\n\ntext = '<p>' + text + '</p>';\ntext = text.replace(/\\n/g, '</p><p>');\nreturn text;\n","display":"codemirror","mode":"htmlgen","runOnBlur":false,"runOnLoad":true},{"type":"css","name":"css1","visible":false,"text":"\n.adjustable-number {\n    color: #0dbe04;\n    white-space: nowrap;\n}\n\n.calculated-result {\n    color: #2695fd;\n    white-space: nowrap;\n}\n\n/*\n.adjustable-number:hover {\n    background-color: #e4ffed;\n    color: #0cb304;\n\t  cursor: col-resize;\n}\n\n.calculated-result:hover {\n    background-color: #e1eef3;\n\t\tcursor: pointer;\n}\n*/\n\n\n\n","display":"codemirror","mode":"default","runOnBlur":true,"runOnLoad":true}]}