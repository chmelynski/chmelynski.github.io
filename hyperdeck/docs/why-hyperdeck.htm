<div id="md1"><h1>Welcome to Hyperdeck!</h1>

<p>Hyperdeck is a notebook programming environment for making documents.</p>

<p>If I had to do describe it in an X-for-Y way, the most technically accurate would be JSFiddle for LaTeX (although PDF support is not quite here yet).</p>

<p>Another way to describe it would be Excel/Word/Powerpoint but using web technologies.  Different form, but same goals.</p>

<h3>Why Hyperdeck?</h3>

<p>Of course, Google already has Google Docs - how is this different?  Google Docs is basically Microsoft Office ported to the web - the same interface, but built in HTML/CSS/JS instead.</p>

<p>Hyperdeck is what you get when you attempt to redesign the canonical office apps to take full advantage of the modern browser.</p>

<p>First of all, why are spreadsheets, word processors, and presentation editors different apps?  Mostly just path dependence - they started as different apps back in the 70s and 80s, and have stayed that way.</p>

<p>Certainly Microsoft has made valiant attempts at getting their office apps to play nicely with each other, but ultimately they're fighting against fundamental elements of the design.</p>

<p><strong>Hyperdeck seeks to unify spreadsheets, word processors, and presentation editors into a single app, built on modern, open, extensible web technologies.</strong></p>

<p>The same is true for scriptability.  Visual Basic for Applications was not part of the original Excel - it was added on as a sort of separate module in 1990.  It works!  The world still runs on Excel/VBA.  But again, getting the two parts to play well together requires fighting the inherent separateness of the apps.</p>

<p><strong>Hyperdeck seeks to integrate scriptability as a first-class citizen along with direct and indirect ways of editing documents.</strong></p>

<p>Microsoft Office has an ecosystem of add-ons.  I don't know how to get one.  Ok, to be fair, I could figure it out.  Still, I'm almost certain that whatever system Office uses is beaten by the humble link.  Javascript is eating the world - for almost anything you can imagine, there is a javascript library available on the web.  Many of these libraries can be installed with a simple link.  VBA has its partisans, but ultimately VBA is the past.  Javascript (and other languages that can be made to run in the browser) is the future.</p>

<p><strong>Hyperdeck can be extended by any code library that can run in the browser.</strong></p>

<p>Intrigued?  Try our tutorial <a href="http://workbook.hyperdeck.io/f/2/tutorial">here</a>.</p></div>

