
<html>
<head>
<script src='https://cdnjs.cloudflare.com/ajax/libs/d3/4.13.0/d3.min.js'></script>
<script src='https://cdnjs.cloudflare.com/ajax/libs/topojson/3.0.2/topojson.min.js'></script>
<script src='https://cdnjs.cloudflare.com/ajax/libs/tabletop.js/1.4.3/tabletop.min.js'></script>
<script src='https://api.mapbox.com/mapbox.js/v3.0.1/mapbox.js'></script>
<link href='https://api.mapbox.com/mapbox.js/v3.0.1/mapbox.css' rel='stylesheet' />
<style>
body { margin:0; padding:0; }
.map { position:absolute; top:0; bottom:0; width:100%; }
</style>
</head>
<body>
<div id='map' class='map'></div>
<script>

// https://www.mapbox.com/mapbox.js/api/v3.0.1/
// http://leafletjs.com/reference-1.0.3.html

var abbrs = ['AL','AK','AZ','AR','CA','CO','CT','DE','FL','GA','HI','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','OR','PA','RI','SC','SD','TN','TX','UT','VT','VA','WA','WV','WI','WY'];
var fipss = ['01','02','04','05','06','08','09','10','12','13','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','44','45','46','47','48','49','50','51','53','54','55','56'];

var fipsDict = {};

for (var i = 0; i < abbrs.length; i++)
{
	fipsDict[abbrs[i]] = fipss[i];
}

L.mapbox.accessToken = 'pk.eyJ1IjoiY2htZWx5bnNraSIsImEiOiJjaXZ6Z3N4MWswMWo4MnRwYzU4dDJydDd5In0.SycFn5U52geRZGk8gJT2RA';

var lat = 40.8;
var lng = -73.9;
var zoom = 12;
var topo = 'https://s3.amazonaws.com/chmelynski/mapping/topojson/congressional-districts.topojson';
var spreadsheetkey = '2PACX-1vQCzsW7cC3K2KYUaYzpveEetYntXCnW0MJmiWjJBNQRd7b-Yi7PpN9Jz3P-nAxPxP77akA49-xy67JA'

var map = L.mapbox.map('map', 'mapbox.streets').setView([lat, lng], zoom);
//L.mapbox.featureLayer().addTo(map).loadURL('topojson/state-legislative-districts-upper/NY.topojson');

var colorMap = {
	R: 'red',
	D: 'blue',
	ID: 'purple',
	Vacant: 'gray'
};

d3.json(topo, function(error, data) {
	
	var features = [];
	var featureOptions = {};
	var featureCollection = null;
	
	for (var key in data.objects)
	{
		featureCollection = topojson.feature(data, data.objects[key]);
		
		for (var i = 0; i < featureCollection.features.length; i++)
		{
			var feature = featureCollection.features[i];
			
			var geoid = feature.properties.GEOID; // '4201' - statefp,district (00 for at large)
			var stateFip = parseInt(geoid.substr(0, 2));
			var districtIndex = parseInt(geoid.substr(2, 2));
			
			features[geoid] = feature;
		}
	}
	
	Tabletop.init({ 
		key: spreadsheetKey,
		simpleSheet: true,
		callback: function(data, tabletop) {
			
			for (var i = 0; i < data.length; i++)
			{
				var pol = data[i];
				
				var geoid = fipsDict[pol.state] + pol.district.padStart(2, '0');
				var party = pol.party;
				var name = pol.name;
				var districtIndex = pol.district;
				
				var feature = features[geoid];
				var geometry = feature.geometry;
				var props = feature.properties;
				var lat = parseFloat(props.INTPTLAT);
				var lng = parseFloat(props.INTPTLON);
				var districtName = props.NAMELSAD;
				
				var color = colorMap[party];
				
				var wd = 200;
				var hg = 25;
				var canvas = document.createElement('canvas');
				var ctx = canvas.getContext('2d');
				ctx.fillStyle = color;
				ctx.fillRect(0, 0, wd, hg);
				ctx.textAlign = 'left';
				ctx.textBaseline = 'middle';
				ctx.fillStyle = 'white';
				ctx.font = '10pt sans-serif';
				ctx.fillText(districtIndex.toString() + ' - ' + name + ' (' + party + ')', 5, hg / 2);
				
				var myIcon = L.icon({
					iconUrl: canvas.toDataURL(),
					//iconSize: [wd, hg]
					iconAnchor: [wd / 2, hg / 2],
					//popupAnchor: [-3, -76]
				});
				
				var marker = L.marker([lat, lng], {icon: myIcon, title: districtIndex + ' - ' + name + ' (' + party + ')'}).addTo(map);
				
				var options = {
					stroke: true,
					//color: color,
					color: 'black',
					weight: 2,
					opacity: 0.7,
					fill: true,
					fillColor: color,
					fillOpacity: 0.4
				};
				
				featureOptions[districtName] = options;
			}
			
			var layerOptions = {
				style: function(feature) {
					return featureOptions[feature.properties.NAMELSAD];
				}
			};
			
			var layer = L.geoJson(featureCollection, layerOptions).addTo(map);
		}
	});
});

</script>
</body>
</html>

